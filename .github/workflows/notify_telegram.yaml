name: Scrape and Save HTML from hreflang URLs

on:
  push:
    branches:
      - main
    paths:
      - 'html/**'  # Se ejecuta cuando hay cambios en HTML
  workflow_dispatch:  # Permite ejecución manual
  schedule:
    - cron: "0 */6 * * *"  # Corre cada 6 horas
  workflow_run:
    workflows: ["Scrape hreflang from URL and Commit if Changes Detected"]
    types:
      - completed

jobs:
  scrape_and_save_html:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Necesario para que git diff funcione correctamente

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -q requests pyyaml

    - name: Scrape URLs from hreflang_links.yaml and save HTML files
      run: |
        python scrape_and_save_html.py

    - name: Debug Git Diff
      run: |
        echo "🔍 Estado actual de Git:"
        git status
        echo "🔍 Cambios detectados en HTML:"
        git diff --name-only HEAD^ HEAD -- 'html/'

    - name: Check for changes
      id: check_changes
      run: |
        set -e  # Asegura que el script falle si hay un error
        git add html/
        if git diff --cached --quiet; then
          echo "No changes detected"
          echo "has_changes=false" >> $GITHUB_ENV
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_ENV
          CHANGED_FILES=$(git diff --cached --name-only)
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi
        
    - name: Commit and push changes if there are any
      if: env.has_changes == 'true'
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git commit -m "Updated HTML files with latest scrape results [skip ci]"
        git push

    - name: Notify via Telegram
      if: env.has_changes == 'true'
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        MESSAGE="*Actualización en CrazyOnes*%0ASe han actualizado los siguientes archivos en el directorio *html/*:%0A\`\`\`$CHANGED_FILES\`\`\`%0A🔗 [Ver cambios](https://github.com/${{ github.repository }}/commits/main)"
        
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d "chat_id=$TELEGRAM_CHAT_ID" \
        -d "parse_mode=MarkdownV2" \
        -d "text=$MESSAGE"
